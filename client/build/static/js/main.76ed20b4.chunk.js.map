{"version":3,"sources":["js/react-auth0-wrapper.js","components/Navbar/Navbar.jsx","components/bounce.js","components/Sidebar/WordList.jsx","components/Sidebar/Sidebar.jsx","components/Searchbar/Searchbar.jsx","components/WordSelector/WordSelector.jsx","components/Title/Title.jsx","js/API.js","components/WCG/WCG.jsx","components/WCDisplay/WCDisplay.jsx","components/Welcome/Welcome.jsx","components/PrivateRoutes/PrivateRoutes.jsx","App.js","registerServiceWorker.js","index.js"],"names":["DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","Auth0Context","React","createContext","useAuth0","useContext","Navbar","props","_useAuth","isAuthenticated","loginWithRedirect","logout","clickWC","e","setCurrentWC","target","getAttribute","setCurrentWCID","react_default","a","createElement","className","href","react_router_dom","to","id","role","data-toggle","aria-haspopup","aria-expanded","currentWC","aria-labelledby","wcList","map","wc","index","key","onClick","wcid","_id","Fragment","grow","Bounce","scale","from","x","y","duration","define","moveAside","translate","Sidebar_WordList","selectedWords","word","name","wordHighlight","Sidebar","btnClasses","buildLinkClasses","buildBtnClasses","buildBtnDisabled","createNewWC","saveWC","submitBuild","deleteSeletedWord","deleteSelectedWord","SearchBar","clearInput","value","onSubmit","this","searchWord","onChange","type","placeholder","aria-label","searchTopic","Component","WordSelector_WordSelector","relatedWords","keys","Object","deleteBtnClicked","wordClick","Title_Title","preventDefault","API","updateWordCloud","body","axios","put","createWordCloud","post","getWordClouds","userId","get","getWordCloudById","concat","minWordsCount","WordCloudGenerator","state","searchBarUpdate","_e$target","_this","setState","defineProperty","searchBarSubmit","_this$state","addToSelectedList","wordSearch","filter","verifyBuiltButtonState","topic","includes","push","_callee","results","_i","_queries","param","queryString","url","response","list","regenerator_default","wrap","_context","prev","next","length","sent","data","object","stop","titleOnChange","buildWordCloud","saveWordListToDB","_callee2","wcID","_context2","wordList","loadWcList","alert","currentWCID","words","then","console","log","prevProps","_this2","_response$data","Sidebar_Sidebar","Searchbar_SearchBar","contextType","wordSizeScale","wordSizeOffset","WordCloudDisplay","text","drawWordCloud","Math","floor","exp","random","sizeDown","parentElement","sizeUp","lib_default","fontSizeMapper","log2","rotate","reload","Welcome","PrivateRoute","_ref","component","path","rest","objectWithoutProperties","loading","useEffect","_ref2","asyncToGenerator","mark","appState","targetUrl","apply","arguments","fn","react_router","assign","render","App","user","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","_useState5","_useState6","setWcList","userSub","sub","substring","indexOf","selectedId","selectedWC","catch","Navbar_Navbar","exact","PrivateRoutes","WCG_WCG","WCDisplay_WordCloudDisplay","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","children","_ref$onRedirectCallba","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","_useState7","_useState8","setLoading","_useState9","_useState10","popupOpen","setPopupOpen","auth0FromHook","_ref3","_user","createAuth0Client","search","handleRedirectCallback","getUser","initAuth0","loginWithPopup","_ref4","params","_args2","undefined","t0","finish","_ref5","_callee3","_context3","Provider","getIdTokenClaims","getTokenSilently","getTokenWithPopup","domain","config","client_id","clientId","redirect_uri","origin","src_App","getElementById","URL","process","addEventListener","fetch","status","headers","ready","unregister","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.76ed20b4.chunk.js","sourcesContent":["// src/react-auth0-wrapper.js\nimport React, { useState, useEffect, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n    window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const Auth0Context = React.createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\nexport const Auth0Provider = ({\n    children,\n    onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n    ...initOptions\n}) => {\n    const [isAuthenticated, setIsAuthenticated] = useState();\n    const [user, setUser] = useState();\n    const [auth0Client, setAuth0] = useState();\n    const [loading, setLoading] = useState(true);\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    useEffect(() => {\n\n        const initAuth0 = async () => {\n            const auth0FromHook = await createAuth0Client(initOptions);\n            setAuth0(auth0FromHook);\n\n            if (window.location.search.includes(\"code=\")) {\n                const { appState } = await auth0FromHook.handleRedirectCallback();\n                onRedirectCallback(appState);\n            }\n\n            const isAuthenticated = await auth0FromHook.isAuthenticated();\n\n            setIsAuthenticated(isAuthenticated);\n\n            if (isAuthenticated) {\n                const user = await auth0FromHook.getUser();\n                setUser(user);\n            }\n\n\n            setLoading(false);\n        };\n        initAuth0();\n        // eslint-disable-next-line\n    }, []);\n\n    const loginWithPopup = async (params = {}) => {\n        setPopupOpen(true);\n        try {\n            await auth0Client.loginWithPopup(params);\n        } catch (error) {\n            console.error(error);\n        } finally {\n            setPopupOpen(false);\n        }\n        const user = await auth0Client.getUser();\n        setUser(user);\n        setIsAuthenticated(true);\n    };\n\n    const handleRedirectCallback = async () => {\n        setLoading(true);\n        await auth0Client.handleRedirectCallback();\n        const user = await auth0Client.getUser();\n        setLoading(false);\n        setIsAuthenticated(true);\n        setUser(user);\n    };\n    return (\n        <Auth0Context.Provider\n            value={{\n                isAuthenticated,\n                user,\n                loading,\n                popupOpen,\n                loginWithPopup,\n                handleRedirectCallback,\n                getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n                loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n                getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n                getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\n                logout: (...p) => auth0Client.logout(...p)\n            }}\n        >\n            {children}\n        </Auth0Context.Provider>\n    );\n};","import React, { useState, useEffect } from 'react';\nimport { useAuth0 } from \"../../js/react-auth0-wrapper\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navbar.css\"\n\nexport default function Navbar(props) {\n    const { isAuthenticated, loginWithRedirect, logout } = useAuth0();\n\n    const clickWC = (e) => {\n        props.setCurrentWC(e.target.getAttribute(\"title\"))\n        props.setCurrentWCID(e.target.getAttribute(\"wcid\"))\n    }\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-success\">\n            <a href=\"/\" className=\"navbar-brand\">Word Cloud Generator</a>\n            {isAuthenticated && (\n                <div className=\"d-inline-flex align-items-baseline\">\n                    {/* <button onClick={props.loadWcList} className=\"btn nav-item btn-danger\">Load</button> */}\n                    <div className=\"dropdown nav-item\">\n                        <Link className=\"nav-link dropdown-toggle\" to=\"#\" id=\"wordList\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <button className=\"btn btn-warning\">\n                                {props.currentWC || \"Click Load to Load WordClouds...\"}\n                            </button>\n                        </Link>\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"wordList\">\n                            {props.wcList.map((wc, index) => <li className=\"dropdown-item\" key={index} onClick={clickWC} title={wc.title} wcid={wc._id}>{wc.title}</li>)}\n                        </ul>\n                    </div>\n                </div>\n            )}\n\n            <ul className=\"navbar-nav ml-auto\">\n                {isAuthenticated && (\n                    <React.Fragment>\n                        <li className=\"nav-item\">\n                            <Link to=\"/build\">\n                                <button className=\"btn btn-warning navbar-btn\">\n                                    Build\n                                </button>\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link to=\"/wordCloud\">\n                                <button className=\"btn btn-warning navbar-btn\">Display</button>\n                            </Link>\n                        </li>\n                    </React.Fragment>\n                )}\n\n                {/* Login buttons */}\n                <li className=\"nav-item\">\n                    {/* if not authenticated render login button*/}\n                    {!isAuthenticated && (\n                        <button className=\"btn btn-info navbar-btn\"\n                            onClick={() =>\n                                loginWithRedirect({})\n                            }\n                        >\n                            Log in\n                        </button>\n                    )}\n\n                    {/* if authendicated render logout button */}\n                    {isAuthenticated &&\n                        <button className=\"btn btn-info navbar-btn\" onClick={() => logout()}>\n                            Log out\n                        </button>\n                    }\n                </li>\n            </ul>\n        </nav>\n    );\n}","import Bounce from \"bounce.js\"\nconst grow = new Bounce();\ngrow.scale({\n    from: { x: 1, y: 1 },\n    to: { x: 1.5, y: 1.5 },\n    duration: 2000\n});\ngrow.define(\"grow\");\n\nconst moveAside = new Bounce();\nmoveAside.translate({\n    from: { x: 0 },\n    to: { x: -30 },\n    duration: 500\n});\nmoveAside.define(\"move-aside\")","import React from 'react';\nimport \"../bounce\"\n\nexport default function (props) {\n    return (\n        <div className=\"word-list\">\n            <ul>\n                {props.selectedWords.map((word, index) => {\n                    return (\n                        <li\n                            name={word}\n                            className=\"selected-word\"\n                            onClick={() => { props.wordHighlight(word) }}\n                            key={index}>\n                            {word}\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    );\n}","import React from 'react';\nimport \"./Sidebar.css\"\nimport \"./Buttons.css\"\nimport \"./WordList.css\"\nimport WordList from \"./WordList\"\nimport { Link } from \"react-router-dom\"\n\nexport default function Sidebar(props) {\n    let btnClasses = \"btn btn-success btn-large sidebar-btn\"\n    let buildLinkClasses = \"\"\n    let buildBtnClasses = btnClasses + \" build-btn\"\n    if (props.buildBtnDisabled) {\n        buildBtnClasses += \" disabled\"\n        buildLinkClasses += \" disable-link\"\n    }\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"button-group\">\n                <div>\n                    <button className={btnClasses} onClick={props.createNewWC}>Create</button>\n                    <button className={btnClasses} onClick={props.saveWC}>Save</button>\n                </div>\n                <div>\n                    <Link to={\"/wordCloud\"} className={buildLinkClasses}>\n                        <button className={buildBtnClasses} onClick={props.submitBuild}>Build it</button>\n                    </Link>\n                </div>\n            </div>\n            <WordList\n                selectedWords={props.selectedWords}\n                wordHighlight={props.wordHighlight}\n                deleteSeletedWord={props.deleteSelectedWord} />\n        </div>\n    );\n}","import React, { Component } from 'react';\nimport \"./Searchbar.css\";\n\nexport default class SearchBar extends Component {\n    clearInput = (e) => {\n        e.target.value = \"\";\n    }\n    render() {\n        return (\n            <div className=\"search-bar\" >\n                <form className=\"form-inline\"\n                    onSubmit={this.props.onSubmit}>\n                    <input name=\"searchWord\"\n                        value={this.props.searchWord}\n                        onChange={this.props.onChange}\n                        // onFocus={this.clearInput}\n                        className=\"form-control\"\n                        id=\"search-word-input\"\n                        type=\"search\"\n                        placeholder=\"Search Word\"\n                        aria-label=\"Search Word\" />\n                </form>\n                <form className=\"form-inline\"\n                    onSubmit={this.props.onSubmit}>\n                    <input name=\"searchTopic\"\n                        value={this.props.searchTopic}\n                        onChange={this.props.onChange}\n                        // onFocus={this.clearInput}\n                        className=\"form-control\"\n                        id=\"search-topic-input\"\n                        type=\"search\"\n                        placeholder=\"Search Topic (optional)\"\n                        aria-label=\"Search Topic\" />\n                </form>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./WordSelector.css\"\n\n\nexport default function (props) {\n\n    let { relatedWords } = props\n    let keys = Object.keys(relatedWords)\n    // let elementCounter = 0;\n\n    return (\n        <div className=\"word-selector\">\n            <h3 className=\"chosen-word word\">{props.searchWord}</h3>\n            <button\n                className=\"btn btn-danger btn-sm float-right\"\n                onClick={props.deleteBtnClicked}>\n                &times;\n            </button>\n            <ul>\n                {\n                    // console.log(relatedWords)\n\n                    keys.map((key) => {\n                        return (\n                            // classes = \"word \" + key\n                            relatedWords[key].map((word, index) => {\n\n                                return (\n                                    <li className={\"word \" + key}\n                                        onClick={() => { props.wordClick(word) }}\n                                        key={index}\n                                        name={word}>\n                                        {word}\n                                    </li>\n                                )\n                            })\n                        )\n                    })\n                }\n            </ul>\n        </div >\n    );\n}","import React from 'react';\nimport \"./Title.css\"\n\nexport default function (props) {\n    return (\n        <form className=\"form-inline\"\n            onSubmit={(e) => e.preventDefault()}>\n            <input name=\"title\"\n                value={props.value}\n                onChange={props.onChange}\n                className=\"form-control text-center\"\n                type=\"input\"\n                id=\"title-input\"\n                placeholder=\"Press Create For New WordCloud\"\n                aria-label=\"Title\" />\n        </form>\n    );\n}","import axios from \"axios\"\n\n\nexport default {\n    updateWordCloud: function (id, body) {\n        return axios.put(\"/api/word-cloud/\" + id, body)\n    },\n\n    createWordCloud: function (body) {\n        return axios.post(\"/api/word-cloud/\", body)\n    },\n\n    getWordClouds: function (userId) {\n        return axios.get(\"/api/word-cloud/all/\" + userId)\n    },\n\n    getWordCloudById: function (wcid) {\n        return axios.get(`/api/word-cloud/${wcid}`)\n    }\n\n    // buildWordCloud: function (wordList) {\n    //     return axios.post(\"/api/word-cloud/create\", wordList)\n    // }\n}","import React, { Component } from \"react\";\nimport { Sidebar, Searchbar, WordSelector, Title } from \"../\"\nimport \"./WCG.css\"\nimport axios from \"axios\"\nimport API from \"../../js/API\"\nimport { Auth0Context } from \"../../js/react-auth0-wrapper\";\n\n\nconst minWordsCount = 10;\nconst maxWordSize = 100000;\nclass WordCloudGenerator extends Component {\n    // use APP.js for all props data\n    state = {\n        buildBtnDisabled: true,\n        searchWord: \"\",\n        searchTopic: \"\",\n        relatedWords: {},\n        selectedWords: [],\n        title: \"\"\n    }\n    componentDidMount() {\n        // console.log(\"did mount\");\n        this.props.loadWcList(this.props.currentWCID);\n    }\n    componentDidUpdate(prevProps) {\n        // console.log(\"did update\");\n        // console.log(prevProps);\n\n        if (this.props.currentWCID && (prevProps.currentWCID !== this.props.currentWCID || this.state.title === \"\")) {\n            API.getWordCloudById(this.props.currentWCID)\n                .then(response => {\n                    const { title, words } = response.data;\n                    this.setState({\n                        title,\n                        selectedWords: words\n                    })\n                })\n        }\n    }\n\n    searchBarUpdate = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value })\n    }\n\n    searchBarSubmit = (e) => {\n        e.preventDefault();\n        const { searchWord, searchTopic } = this.state\n        // console.log(searchWord + \" \" + searchTopic);\n\n        this.addToSelectedList(searchWord, searchTopic)\n        this.wordSearch(searchWord, searchTopic);\n    }\n\n    deleteSelectedWord = (e) => {\n        let selectedWords = this.state.selectedWords.filter(word => word !== this.state.searchWord)\n        this.setState({ selectedWords, relatedWords: {}, searchWord: \"\" })\n        this.verifyBuiltButtonState();\n    }\n\n    addToSelectedList = (word, topic) => {\n        if (!this.state.selectedWords.includes(word)) {\n            let selectedWords = this.state.selectedWords;\n            selectedWords.push(word);\n            this.setState({ selectedWords });\n            this.wordHighlight(word);\n        }\n    }\n\n    wordSearch = async (word, topic) => {\n\n        let results = {}\n        this.setState({ relatedWords: results })\n        const queries = [\"ml\", \"rel_syn\", \"rel_trg\", \"rel_jja\", \"rel_jjb\", \"rel_gen\", \"rel_com\"];\n        for (const param of queries) {\n            let queryString = `${param}=${word}`;\n            if (topic)\n                queryString += `&topic=${topic}`;\n            const url = `https://api.datamuse.com/words?${queryString}&max=10&md=f`;\n            // console.log(url);\n\n            let response = await axios.get(url)\n            let list = response.data\n            results[param] = list.map(object => object.word)\n        }\n\n        this.setState({ relatedWords: results })\n        this.wordHighlight(word);\n    }\n\n    wordHighlight = (word) => {\n        this.setState({ searchWord: word })\n        this.verifyBuiltButtonState();\n    }\n\n    verifyBuiltButtonState = () => {\n        if (this.state.selectedWords.length >= minWordsCount)\n            this.setState({ buildBtnDisabled: false })\n        else\n            this.setState({ buildBtnDisabled: true })\n    }\n\n\n    titleOnChange = (e) => {\n        const { value } = e.target;\n        this.setState({ title: value })\n    }\n\n    // build word cloud\n    buildWordCloud = (e) => {\n        this.saveWordListToDB()\n    }\n\n    createNewWC = async () => {\n\n        let userId = this.props.userId;\n        let title = \"New WorldCloud\";\n\n        let body = {\n            userId,\n            title,\n            wordList: this.state.selectedWords\n        };\n\n        const response = await API.createWordCloud(body)\n        // console.log(response);\n\n        const wcID = response.data._id\n        this.setState({\n            searchWord: \"\",\n            searchTopic: \"\",\n            relatedWords: {},\n            selectedWords: [],\n        })\n        this.props.setCurrentWC(\"New WordCloud\");\n        this.props.setCurrentWCID(wcID);\n        this.props.loadWcList();\n    }\n\n    saveWordListToDB = () => {\n        if (this.state.title === \"\")\n            return alert(\"Title cannot be empty\")\n        let id = this.props.currentWCID\n        this.props.setCurrentWC(this.state.title)\n        if (id) {\n            let body = {\n                title: this.state.title,\n                words: this.state.selectedWords\n            }\n            API.updateWordCloud(id, body).then(response => {\n                this.props.loadWcList(id);\n            })\n        } else console.log(\"no wordcloud created\");\n\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\" >\n                    <div className=\"col-lg-3\">\n                        <Sidebar\n                            buildBtnDisabled={this.state.buildBtnDisabled}\n                            selectedWords={this.state.selectedWords}\n                            wordHighlight={this.wordSearch}\n                            deleteSelectedWord={this.deleteSelectedWord}\n                            submitBuild={this.buildWordCloud}\n                            saveWC={this.saveWordListToDB}\n                            createNewWC={this.createNewWC}\n                        />\n                    </div>\n                    <div className=\"col-lg-9\">\n                        <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                <Title\n                                    value={this.state.title}\n                                    onChange={this.titleOnChange}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                <Searchbar\n                                    searchWord={this.state.searchWord}\n                                    onChange={this.searchBarUpdate}\n                                    onSubmit={this.searchBarSubmit}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-lg-12\">\n                                <WordSelector\n                                    deleteBtnClicked={this.deleteSelectedWord}\n                                    searchWord={this.state.searchWord}\n                                    relatedWords={this.state.relatedWords}\n                                    wordClick={this.addToSelectedList} />\n                            </div>\n                        </div>\n                    </div>\n                </div >\n            </div >\n\n        );\n    }\n}\nWordCloudGenerator.contextType = Auth0Context\nexport default WordCloudGenerator;\n","import React, { Component } from 'react';\nimport ReactCloud from \"react-d3-cloud\";\nimport API from \"../../js/API\"\nimport \"./WCDisplay.css\"\n\nconst wordSizeScale = 20;\nconst wordSizeOffset = 5;\nexport default class WordCloudDisplay extends Component {\n\n    state = {\n        wordList: [{ text: \"Loading\", value: 1000000 }]\n    }\n\n    componentDidMount() {\n        if (!this.props.currentWCID) {\n            this.props.loadWcList();\n        }\n        this.drawWordCloud()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentWCID !== this.props.currentWCID) {\n            this.drawWordCloud()\n        }\n    }\n\n    drawWordCloud = () => {\n        const id = this.props.currentWCID\n        const promise = API.getWordCloudById(id)\n        promise.then(response => {\n            let wordList = response.data.words;\n            // console.log(wordList);\n\n            wordList = wordList.map(word => {\n                const size = Math.floor(Math.exp(wordSizeScale * Math.random()) * wordSizeOffset);\n                // console.log(word);\n                // console.log(size);\n                return { text: word, value: size }\n            })\n            // console.log(wordList);\n            this.setState({ wordList })\n        })\n    }\n\n    sizeDown = (e) => {\n        const index = e.target.parentElement.parentElement.getAttribute(\"index\")\n        // console.log(index)\n        const wordList = this.state.wordList\n        wordList[index].value -= 1000\n        this.setState({ wordList })\n    }\n    sizeUp = (e) => {\n        const index = e.target.parentElement.parentElement.getAttribute(\"index\")\n        // console.log(index)\n        const wordList = this.state.wordList\n        wordList[index].value += 1000\n        this.setState({ wordList })\n    }\n\n    render() {\n        const fontSizeMapper = word => Math.log2(word.value) * 5;\n        const rotate = function () { return ~~(Math.random() * 2) * 30; };\n\n        return (\n            <div className=\"row\">\n                <div className=\"col-lg-9\">\n                    <ReactCloud data={this.state.wordList} fontSizeMapper={fontSizeMapper} rotate={rotate} />\n                </div>\n                <div className=\"col-lg-3\">\n                    <button className=\"btn btn-danger btn-lg my-4\" onClick={() => window.location.reload()}>Reload</button>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { useAuth0 } from \"../../js/react-auth0-wrapper\"\n\nexport default function (props) {\n    const { loginWithRedirect } = useAuth0()\n    return (\n        <div className=\"row\">\n            <div className=\"col-lg-12\">\n                <div className=\"jumbotron\">\n                    <h1>Build Inspiring WordClouds, Fast!</h1>\n                    <button\n                        className=\"btn btn-warning\"\n                        onClick={() => loginWithRedirect({})}>\n                        Start Here\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n}","\nimport React, { useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { useAuth0 } from \"../../js/react-auth0-wrapper\";\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => {\n    const { loading, isAuthenticated, loginWithRedirect } = useAuth0();\n\n    useEffect(() => {\n        if (loading || isAuthenticated) {\n            return;\n        }\n        const fn = async () => {\n            await loginWithRedirect({\n                appState: { targetUrl: path }\n            });\n        };\n        fn();\n    }, [loading, isAuthenticated, loginWithRedirect, path]);\n\n    const render = props => isAuthenticated === true ? <Component {...props} /> : null;\n\n    return <Route path={path} render={render} {...rest} />;\n};\n\nexport default PrivateRoute;","import React, { Component, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport WordCloudGenerator from \"./components/WCG/WCG\"\nimport WordCloudDisplay from \"./components/WCDisplay/WCDisplay\"\nimport Welcome from \"./components/Welcome/Welcome\"\nimport Navbar from \"./components/Navbar/Navbar\"\nimport PrivateRoute from \"./components/PrivateRoutes/PrivateRoutes\"\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { useAuth0 } from \"./js/react-auth0-wrapper\";\nimport API from './js/API';\n\n\n\nfunction App() {\n\n  const { isAuthenticated, loading, user } = useAuth0();\n  const [currentWC, setCurrentWC] = useState();\n  const [currentWCID, setCurrentWCID] = useState();\n  const [wcList, setWcList] = useState([]);\n\n  let userSub = \"\";\n  let userId = \"\";\n  if (isAuthenticated === true && user) {\n    userSub = user.sub\n    userId = userSub.substring(userSub.indexOf(\"|\") + 1)\n  }\n\n  const loadWcList = (selectedId) => {\n    API.getWordClouds(userId)\n      .then(response => {\n        // console.log(response.data.length > 0);\n        if (response.data.length > 0) {\n          setWcList(response.data)\n          let selectedWC\n          if (selectedId)\n            selectedWC = response.data.filter(wc => wc._id === selectedId)[0]\n          if (!selectedWC)\n            selectedWC = response.data[response.data.length - 1];\n          // console.log(response.data);\n\n          setCurrentWC(selectedWC.title)\n          setCurrentWCID(selectedWC._id)\n\n          // console.log(selectedWC.title);\n          // console.log(selectedWC);\n        }\n      })\n      .catch(e => { console.log(e) })\n  }\n\n  useEffect(() => {\n    if (userId) {\n      // console.log('called');\n\n      // loadWcList();\n    }\n  }, [userId]);\n\n\n  if (loading) {\n    return (\n      <div>App Loading...</div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"App container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <Navbar\n              userId={userId}\n              currentWC={currentWC}\n              currentWCID={currentWCID}\n              setCurrentWC={setCurrentWC}\n              setCurrentWCID={setCurrentWCID}\n              wcList={wcList}\n              loadWcList={loadWcList}\n            />\n          </div>\n        </div>\n        <Switch>\n          <Route exact path=\"/\" render={() => {\n            if (isAuthenticated === false)\n              return <Welcome />\n            else\n              return <Redirect to=\"/build\" />\n          }} />\n          {/* <Route exact path=\"/\" component={Welcome} /> */}\n          <PrivateRoute\n            path=\"/build\"\n            render={(props) => <WordCloudGenerator {...props}\n              userId={userId}\n              currentWC={currentWC}\n              currentWCID={currentWCID}\n              setCurrentWC={setCurrentWC}\n              setCurrentWCID={setCurrentWCID}\n              loadWcList={loadWcList}\n            />}\n          />\n          <PrivateRoute\n            path=\"/wordCloud\"\n            render={(props) => <WordCloudDisplay\n              currentWCID={currentWCID}\n              loadWcList={loadWcList}\n            />}\n          />\n          {/* <Route exact path=\"/build\" component={WordCloudGenerator} />\n          <Route exact path=\"/wordCloud\" component={WordCloudDisplay} /> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport { Auth0Provider } from \"./js/react-auth0-wrapper\";\nimport config from \"./auth_config.json\";\n\nconst onRedirectCallback = appState => {\n    window.history.replaceState(\n        {},\n        document.title,\n        appState && appState.targetUrl\n            ? appState.targetUrl\n            : window.location.pathname\n    );\n};\n\nReactDOM.render(\n    <Auth0Provider\n        domain={config.domain}\n        client_id={config.clientId}\n        redirect_uri={window.location.origin}\n        onRedirectCallback={onRedirectCallback}\n    >\n        <App />\n    </Auth0Provider>,\n    document.getElementById(\"root\")\n);\n\n// ReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}